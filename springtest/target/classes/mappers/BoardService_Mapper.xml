<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen.myapp.persistence.BoardService_Mapper">

<!-- MyBatis에선 변수를 #{} 안에 담아 표현 -->
<insert id="boardInsert" parameterType="HashMap">
insert into bclass_board(bidx, originbidx, depth, nlevel, subject, contents, writer, pwd, ip, midx)
values(bidx_seq.nextval, bidx_seq.nextval, 0, 0, #{subject}, #{contents}, #{writer}, #{pwd}, #{ip}, #{midx})
</insert>

<!-- MyBatis에서 resultType 이나 parameterType은 클래스타입을 지정해주는 것이 좋다. -->
<select id="boardTotalCount" resultType="Integer">
select count(*) as cnt from bclass_board where delYN = 'N'
				<include refid = "search"></include>
</select>

<!-- bv: com.ezen.myapp.domain.BoardVo의 약어(따로 지정) -->
<!-- MyBatis_config.xml 파일에서 약어(별칭)를 설정해줘야함. -->
<select id="boardSelectAll" parameterType="scri" resultType="bv">
<![CDATA[ 
select B.rnum, B.* from
	(select rownum as rnum, A.* from
	(select * from bclass_board where delYN='N' ]]>
	<include refid="search"></include>
<![CDATA[ order by originbidx desc, depth) A 
where rownum <= #{page} * #{perPageNum}) B
where B.rnum >= (#{page}-1) * #{perPageNum}+1
]]>
</select>

<sql id="search">
<if test="searchType != null and searchType.equals('writer')">
and writer like  '%'||#{keyword}||'%'
</if>
<if test="searchType != null and searchType.equals('subject')">
and subject like  '%'||#{keyword}||'%'
</if>
</sql>

<select id ="boardSelectOne" parameterType="Integer" resultType="bv">
select * from bclass_board where delYN = 'N' and bidx = #{bidx}
</select>

<select id ="commentSelectAll"  parameterType="Integer" resultType="cv">
<![CDATA[ select B.rnum, B.* from
(select rownum as rnum, A.* from
	(select * from bclass_comment where delYN='N' and bidx=#{bidx}
	order by cidx desc ) A 
where rownum <= 5) B
where B.rnum >= 1
]]>
</select>

<insert id ="commentInsert" parameterType="cv">
insert into bclass_comment(cidx, c_subject, c_contents, c_writer, bidx, midx)
values(cidx_seq.nextval, #{c_subject}, #{c_contents}, #{c_writer}, #{bidx}, #{midx})
</insert>

<update id="commentDel" parameterType="Integer" >
update bclass_comment set delYn='Y', writeday=sysdate where cidx=#{cidx}
 </update>
 
 <select id="commentTotalPage" parameterType="Integer" resultType="Integer">
select ceil(count(*)/5) as cnt from bclass_comment where delYN = 'N' and bidx=#{bidx}
</select>
 
 <select id="commentMore" parameterType="HashMap" resultType="cv">
<![CDATA[ select C.rnum, C.* from
    (select rownum as rnum, B.* from
        (select * from bclass_comment 
        where delyn='N' 
        order by cidx desc) B
    where rownum <=#{page} * 5) C
where C.rnum >= 1
]]>
</select>

<update id="boardModify" parameterType="HashMap">
update bclass_board set subject=#{subject}, contents=#{contents}, writer=#{writer} where bidx=#{bidx} and pwd=#{pwd}
</update>

<update id="boardDelete" parameterType="HashMap" >
update bclass_comment set delYn='Y', writeday=sysdate where bidx=#{bidx}
 </update>

<update id="boardReplyUpdate" parameterType="Integer">
<![CDATA[
update bclass_board set depth=depth+1 where originbidx=#{0} and depth > #{1}
 ]]>
</update>
<insert id="boardReplyInsert" parameterType="HashMap">
insert into bclass_board(bidx,originbidx,depth,nlevel,subject,contents,writer,viewcount,ip,midx,pwd) 
values(bidx_seq.nextval,#{originbidx},#{depth}+1,#{nlevel}+1,#{subject},#{contents},#{writer},0,#{ip},#{midx},#{pwd})
</insert>

</mapper>